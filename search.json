[{"path":"https://fipio.justinsingh.me/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 fipio authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://fipio.justinsingh.me/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Justin Singh-Mohudpur. Author, maintainer. Mike Johnson. Contributor. . Funder.","code":""},{"path":"https://fipio.justinsingh.me/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Singh-Mohudpur J (2024). fipio: Lightweight Federal Information Processing System (FIPS) Code Information Retrieval. R package version 1.1.1.9000, https://github.com/UFOKN/fipio, https://fipio.justinsingh..","code":"@Manual{,   title = {fipio: Lightweight Federal Information Processing System (FIPS) Code Information Retrieval},   author = {Justin Singh-Mohudpur},   year = {2024},   note = {R package version 1.1.1.9000, https://github.com/UFOKN/fipio},   url = {https://fipio.justinsingh.me}, }"},{"path":"https://fipio.justinsingh.me/index.html","id":"fipio-","dir":"","previous_headings":"","what":"fipio","title":"fipio","text":"fipio lightweight package makes easy get information US FIPS code.","code":""},{"path":"https://fipio.justinsingh.me/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"fipio","text":"can install released version fipio CRAN : development version pak remotes:","code":"install.packages(\"fipio\") # Using `pak` pak::pkg_install(\"program--/fipio\")  # Using `remotes` remotes::install_github(\"program--/fipio\")"},{"path":"https://fipio.justinsingh.me/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"fipio","text":"fipio makes easy get information US FIPS code. Let’s answer questions might come FIPS code:","code":"fip <- \"37129\"  # What state is `37129` in? fipio::fips_state(fip) #> [1] \"North Carolina\"  # Alternatively, you can use the state FIPS code by itself fipio::fips_state(\"37\") #> [1] \"North Carolina\"  # What about the state abbreviation? fipio::fips_abbr(fip) #> [1] \"NC\"  # What county is `37129`? fipio::fips_county(fip) #> [1] \"New Hanover\"  # It'd be nice to have this all in a data.frame... fipio::fips_metadata(fip) #>   state_region state_division feature_code     state_name state_abbr #> 1            3              5      1026329 North Carolina         NC #>          name fip_class tiger_class combined_area_code metropolitan_area_code #> 1 New Hanover        H1       G4020                 NA                   <NA> #>   functional_status land_area water_area fip_code #> 1                 A 497937486  353803887    37129  # And the metadata for the state by itself... fipio::fips_metadata(\"37\") #>   state_region state_division feature_code     state_name state_abbr #> 1            3              5      1027616 North Carolina         NC #>             name fip_class tiger_class combined_area_code #> 1 North Carolina      <NA>       G4000                 NA #>   metropolitan_area_code functional_status    land_area  water_area fip_code #> 1                   <NA>                 A 125933327733 13456093195       37"},{"path":"https://fipio.justinsingh.me/index.html","id":"with-sf","dir":"","previous_headings":"Usage","what":"With sf","title":"fipio","text":"fipio also includes functions support geometry FIPS codes. requires sfheaders least get sf-compatible geometry object back.","code":"# I'm doing spatial work, what's the geometry of `37129`? fipio::fips_geometry(fip) #> Geometry set for 1 feature  #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: -78.02992 ymin: 33.7868 xmax: -77.67528 ymax: 34.38929 #> Geodetic CRS:  WGS 84 #> MULTIPOLYGON (((-77.89701 33.7868, -77.8952 33....  # What if I need it with my other metadata? fipio::fips_metadata(fip, geometry = TRUE) #>   state_region state_division feature_code     state_name state_abbr #> 1            3              5      1026329 North Carolina         NC #>          name fip_class tiger_class combined_area_code metropolitan_area_code #> 1 New Hanover        H1       G4020                 NA                   <NA> #>   functional_status land_area water_area                       geometry #> 1                 A 497937486  353803887 MULTIPOLYGON (((-77.89701 3... #>   fip_code #> 1    37129"},{"path":"https://fipio.justinsingh.me/index.html","id":"vectorized","dir":"","previous_headings":"Usage","what":"Vectorized","title":"fipio","text":"fipio functions inherently vectorized, can use vectors FIPS codes easily:","code":"fips <- c(\"37129\", \"44001\", \"48115\")  fipio::fips_state(fips) #> [1] \"North Carolina\" \"Rhode Island\"   \"Texas\"  fipio::fips_abbr(fips) #> [1] \"NC\" \"RI\" \"TX\"  fipio::fips_county(fips) #> [1] \"New Hanover\" \"Bristol\"     \"Dawson\"  fipio::fips_metadata(fips) #>   state_region state_division feature_code     state_name state_abbr #> 1            3              5      1026329 North Carolina         NC #> 2            1              1      1219777   Rhode Island         RI #> 3            3              7      1383843          Texas         TX #>          name fip_class tiger_class combined_area_code metropolitan_area_code #> 1 New Hanover        H1       G4020                 NA                   <NA> #> 2     Bristol        H4       G4020                148                   <NA> #> 3      Dawson        H1       G4020                 NA                   <NA> #>   functional_status  land_area water_area fip_code #> 1                 A  497937486  353803887    37129 #> 2                 N   62500772   53359134    44001 #> 3                 A 2331781561    4720730    48115  fipio::fips_geometry(fips) #> Geometry set for 3 features  #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: -102.2085 ymin: 32.52327 xmax: -71.20837 ymax: 41.7762 #> Geodetic CRS:  WGS 84 #> MULTIPOLYGON (((-77.89701 33.7868, -77.8952 33.... #> MULTIPOLYGON (((-71.33097 41.68696, -71.32372 4... #> MULTIPOLYGON (((-102.2027 32.52327, -102.1201 3..."},{"path":"https://fipio.justinsingh.me/index.html","id":"reverse-geolocate-coordinates-to-fips","dir":"","previous_headings":"Usage","what":"Reverse Geolocate Coordinates to FIPS","title":"fipio","text":"fipio contains ability locate FIPS code(s) set coordinates (WGS84/EPSG:4326):","code":"# With a single set of coordinates fipio::coords_to_fips(x = -119.8696, y = 34.4184) #> [1] \"06083\"  # Vectorized fipio::coords_to_fips(     x = c(-81.4980534549709, -81.1249425046948),     y = c(36.4314781444978, 36.4911893240597) ) #> [1] \"37009\" \"37005\"  # With a `data.frame` or `matrix` fipio::coords_to_fips(     x = data.frame(         X = c(-81.4980534549709, -81.1249425046948),         Y = c(36.4314781444978, 36.4911893240597)     ),     coords = c(\"X\", \"Y\") ) #> [1] \"37009\" \"37005\"  # With an `sfg` object fipio::coords_to_fips(     x   = sf::st_point(c(-81.4980534549709,                          36.4314781444978)),     dim = \"XY\" ) #> [1] \"37009\"  # With an `sf` object fipio::coords_to_fips(     x = sf::st_as_sf(         data.frame(X = c(-81.4980534549709, -81.1249425046948),                    Y = c(36.4314781444978, 36.4911893240597)),         coords = c(\"X\", \"Y\"),         crs = 4326     ) ) #> [1] \"37009\" \"37005\""},{"path":"https://fipio.justinsingh.me/reference/as_fips.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a state name, abbreviation, or county name to FIPS codes — as_fips","title":"Convert a state name, abbreviation, or county name to FIPS codes — as_fips","text":"Convert state name, abbreviation, county name FIPS codes","code":""},{"path":"https://fipio.justinsingh.me/reference/as_fips.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a state name, abbreviation, or county name to FIPS codes — as_fips","text":"","code":"as_fips(state, county = NULL)"},{"path":"https://fipio.justinsingh.me/reference/as_fips.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a state name, abbreviation, or county name to FIPS codes — as_fips","text":"state State names, state abbreviations, one following: \"\", \"conus\", \"territories\" county County names \"\"","code":""},{"path":"https://fipio.justinsingh.me/reference/as_fips.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a state name, abbreviation, or county name to FIPS codes — as_fips","text":"character vector","code":""},{"path":"https://fipio.justinsingh.me/reference/as_fips.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a state name, abbreviation, or county name to FIPS codes — as_fips","text":"","code":"fipio::as_fips(state = \"California\") #> [1] \"06\" fipio::as_fips(state = \"NC\") #> [1] \"37\" fipio::as_fips(state = \"Rhode Island\", county = \"Washington\") #> [1] \"44009\" fipio::as_fips(c(\"CA\", \"North Carolina\"), c(\"Stanislaus\", \"NEW HANOVER\")) #> [1] \"06099\" \"37129\" fipio::as_fips(\"CONUS\") #>  [1] \"01\" \"04\" \"05\" \"06\" \"08\" \"09\" \"10\" \"11\" \"12\" \"13\" \"16\" \"17\" \"18\" \"19\" \"20\" #> [16] \"21\" \"22\" \"23\" \"24\" \"25\" \"26\" \"27\" \"28\" \"29\" \"30\" \"31\" \"32\" \"33\" \"34\" \"35\" #> [31] \"36\" \"37\" \"38\" \"39\" \"40\" \"41\" \"42\" \"44\" \"45\" \"46\" \"47\" \"48\" \"49\" \"50\" \"51\" #> [46] \"53\" \"54\" \"55\" \"56\" fipio::as_fips(state = \"NC\", county = \"all\") #>   [1] \"37001\" \"37003\" \"37005\" \"37007\" \"37009\" \"37011\" \"37013\" \"37015\" \"37017\" #>  [10] \"37019\" \"37021\" \"37023\" \"37025\" \"37027\" \"37029\" \"37031\" \"37033\" \"37035\" #>  [19] \"37037\" \"37039\" \"37041\" \"37043\" \"37045\" \"37047\" \"37049\" \"37051\" \"37053\" #>  [28] \"37055\" \"37057\" \"37059\" \"37061\" \"37063\" \"37065\" \"37067\" \"37069\" \"37071\" #>  [37] \"37073\" \"37075\" \"37077\" \"37079\" \"37081\" \"37083\" \"37085\" \"37087\" \"37089\" #>  [46] \"37091\" \"37093\" \"37095\" \"37097\" \"37099\" \"37101\" \"37103\" \"37105\" \"37107\" #>  [55] \"37109\" \"37111\" \"37113\" \"37115\" \"37117\" \"37119\" \"37121\" \"37123\" \"37125\" #>  [64] \"37127\" \"37129\" \"37131\" \"37133\" \"37135\" \"37137\" \"37139\" \"37141\" \"37143\" #>  [73] \"37145\" \"37147\" \"37149\" \"37151\" \"37153\" \"37155\" \"37157\" \"37159\" \"37161\" #>  [82] \"37163\" \"37165\" \"37167\" \"37169\" \"37171\" \"37173\" \"37175\" \"37177\" \"37179\" #>  [91] \"37181\" \"37183\" \"37185\" \"37187\" \"37189\" \"37191\" \"37193\" \"37195\" \"37197\" #> [100] \"37199\""},{"path":"https://fipio.justinsingh.me/reference/coords_to_fips.html","id":null,"dir":"Reference","previous_headings":"","what":"Associate a set of coordinates to FIPS codes — coords_to_fips","title":"Associate a set of coordinates to FIPS codes — coords_to_fips","text":"Associate set coordinates FIPS codes","code":""},{"path":"https://fipio.justinsingh.me/reference/coords_to_fips.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Associate a set of coordinates to FIPS codes — coords_to_fips","text":"","code":"coords_to_fips(x, ...)  # S3 method for sf coords_to_fips(x, ...)  # S3 method for sfc coords_to_fips(x, ...)  # S3 method for sfg coords_to_fips(x, ...)  # S3 method for list coords_to_fips(x, ...)  # S3 method for data.frame coords_to_fips(x, coords = c(1, 2), ...)  # S3 method for matrix coords_to_fips(x, coords = c(1, 2), ...)  # S3 method for character coords_to_fips(x, y, ...)  # S3 method for numeric coords_to_fips(x, y, ...)"},{"path":"https://fipio.justinsingh.me/reference/coords_to_fips.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Associate a set of coordinates to FIPS codes — coords_to_fips","text":"x data.frame, matrix, sf/sfc/sfg object, longitude EPSG:4326 ... Named arguments passed methods coords Coordinates columns x data.frame matrix. y Latitude EPSG:4326","code":""},{"path":"https://fipio.justinsingh.me/reference/coords_to_fips.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Associate a set of coordinates to FIPS codes — coords_to_fips","text":"character vector FIPS codes","code":""},{"path":"https://fipio.justinsingh.me/reference/coords_to_fips.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Associate a set of coordinates to FIPS codes — coords_to_fips","text":"","code":"# Some coordinates at UC Santa Barbara coords_to_fips(x = -119.8696, y = 34.4184) #> [1] \"06083\""},{"path":"https://fipio.justinsingh.me/reference/dot-intersects.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple intersection via ray casting — .intersects","title":"Simple intersection via ray casting — .intersects","text":"Simple intersection via ray casting","code":""},{"path":"https://fipio.justinsingh.me/reference/dot-intersects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple intersection via ray casting — .intersects","text":"","code":".intersects(x, y, geometry)"},{"path":"https://fipio.justinsingh.me/reference/dot-intersects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simple intersection via ray casting — .intersects","text":"indices points x y intersect geometry","code":""},{"path":"https://fipio.justinsingh.me/reference/dot-segment_intersect.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a point intersects with a side of a polygon — .segment_intersect","title":"Check if a point intersects with a side of a polygon — .segment_intersect","text":"Check point intersects side polygon","code":""},{"path":"https://fipio.justinsingh.me/reference/dot-segment_intersect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a point intersects with a side of a polygon — .segment_intersect","text":"","code":".segment_intersect(side, x, y)"},{"path":"https://fipio.justinsingh.me/reference/fips_abbr.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the state abbreviation for a FIPS code — fips_abbr","title":"Get the state abbreviation for a FIPS code — fips_abbr","text":"Get state abbreviation FIPS code","code":""},{"path":"https://fipio.justinsingh.me/reference/fips_abbr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the state abbreviation for a FIPS code — fips_abbr","text":"","code":"fips_abbr(fip)"},{"path":"https://fipio.justinsingh.me/reference/fips_abbr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the state abbreviation for a FIPS code — fips_abbr","text":"fip 2-digit 5-digit FIPS code","code":""},{"path":"https://fipio.justinsingh.me/reference/fips_abbr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the state abbreviation for a FIPS code — fips_abbr","text":"character vector","code":""},{"path":"https://fipio.justinsingh.me/reference/fips_abbr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the state abbreviation for a FIPS code — fips_abbr","text":"","code":"fipio::fips_abbr(\"37\") #> [1] \"NC\" fipio::fips_abbr(\"06001\") #> [1] \"CA\""},{"path":"https://fipio.justinsingh.me/reference/fips_county.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the county name for a FIPS code — fips_county","title":"Get the county name for a FIPS code — fips_county","text":"Get county name FIPS code","code":""},{"path":"https://fipio.justinsingh.me/reference/fips_county.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the county name for a FIPS code — fips_county","text":"","code":"fips_county(fip)"},{"path":"https://fipio.justinsingh.me/reference/fips_county.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the county name for a FIPS code — fips_county","text":"fip 2-digit 5-digit FIPS code","code":""},{"path":"https://fipio.justinsingh.me/reference/fips_county.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the county name for a FIPS code — fips_county","text":"character vector","code":""},{"path":"https://fipio.justinsingh.me/reference/fips_county.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the county name for a FIPS code — fips_county","text":"","code":"fipio::fips_county(\"37129\") #> [1] \"New Hanover\" fipio::fips_county(\"06001\") #> [1] \"Alameda\"  # 2-digit FIP codes will not work fipio::fips_county(\"37\") #> [1] NA"},{"path":"https://fipio.justinsingh.me/reference/fips_geometry.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the geometry for a FIPS code — fips_geometry","title":"Get the geometry for a FIPS code — fips_geometry","text":"Get geometry FIPS code","code":""},{"path":"https://fipio.justinsingh.me/reference/fips_geometry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the geometry for a FIPS code — fips_geometry","text":"","code":"fips_geometry(fip)"},{"path":"https://fipio.justinsingh.me/reference/fips_geometry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the geometry for a FIPS code — fips_geometry","text":"fip 2-digit 5-digit FIPS code","code":""},{"path":"https://fipio.justinsingh.me/reference/fips_geometry.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the geometry for a FIPS code — fips_geometry","text":"sfg/sfc object","code":""},{"path":"https://fipio.justinsingh.me/reference/fips_geometry.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the geometry for a FIPS code — fips_geometry","text":"","code":"if (FALSE) { fipio::fips_geometry(\"37\") fipio::fips_geometry(\"06001\") }"},{"path":"https://fipio.justinsingh.me/reference/fips_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the metadata for a FIPS code — fips_metadata","title":"Get the metadata for a FIPS code — fips_metadata","text":"Get metadata FIPS code","code":""},{"path":"https://fipio.justinsingh.me/reference/fips_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the metadata for a FIPS code — fips_metadata","text":"","code":"fips_metadata(fip, geometry = FALSE)"},{"path":"https://fipio.justinsingh.me/reference/fips_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the metadata for a FIPS code — fips_metadata","text":"fip 2-digit 5-digit FIPS code geometry TRUE, returns geometry column","code":""},{"path":"https://fipio.justinsingh.me/reference/fips_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the metadata for a FIPS code — fips_metadata","text":"data.frame","code":""},{"path":"https://fipio.justinsingh.me/reference/fips_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the metadata for a FIPS code — fips_metadata","text":"","code":"fipio::fips_metadata(\"37\") #>   state_region state_division feature_code     state_name state_abbr #> 1            3              5      1027616 North Carolina         NC #>             name fip_class tiger_class combined_area_code #> 1 North Carolina      <NA>       G4000                 NA #>   metropolitan_area_code functional_status    land_area  water_area fip_code #> 1                   <NA>                 A 125933327733 13456093195       37 fipio::fips_metadata(\"06001\") #>   state_region state_division feature_code state_name state_abbr    name #> 1            4              9      1675839 California         CA Alameda #>   fip_class tiger_class combined_area_code metropolitan_area_code #> 1        H1       G4020                488                  36084 #>   functional_status  land_area water_area fip_code #> 1                 A 1910017353  216902808    06001"},{"path":"https://fipio.justinsingh.me/reference/fips_state.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the state name for a FIPS code — fips_state","title":"Get the state name for a FIPS code — fips_state","text":"Get state name FIPS code","code":""},{"path":"https://fipio.justinsingh.me/reference/fips_state.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the state name for a FIPS code — fips_state","text":"","code":"fips_state(fip)"},{"path":"https://fipio.justinsingh.me/reference/fips_state.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the state name for a FIPS code — fips_state","text":"fip 2-digit 5-digit FIPS code","code":""},{"path":"https://fipio.justinsingh.me/reference/fips_state.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the state name for a FIPS code — fips_state","text":"character vector","code":""},{"path":"https://fipio.justinsingh.me/reference/fips_state.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the state name for a FIPS code — fips_state","text":"","code":"fipio::fips_state(\"37\") #> [1] \"North Carolina\" fipio::fips_state(\"06001\") #> [1] \"California\""},{"path":"https://fipio.justinsingh.me/reference/using_fastmatch.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the matching function that fipio is using — using_fastmatch","title":"Get the matching function that fipio is using — using_fastmatch","text":"function primarily debugging purposes, ensuring correct matching function used.","code":""},{"path":"https://fipio.justinsingh.me/reference/using_fastmatch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the matching function that fipio is using — using_fastmatch","text":"","code":"using_fastmatch()"},{"path":"https://fipio.justinsingh.me/reference/using_fastmatch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the matching function that fipio is using — using_fastmatch","text":"TRUE fastmatch::fmatch used.","code":""},{"path":"https://fipio.justinsingh.me/news/index.html","id":"fipio-1119000","dir":"Changelog","previous_headings":"","what":"fipio 1.1.1.9000","title":"fipio 1.1.1.9000","text":"Fixed coords_to_fips() throwing order error due ret_index list (#15) Return documentation back linking https://github.com/program-- instead UFOKN’s GitHub org.","code":""},{"path":"https://fipio.justinsingh.me/news/index.html","id":"fipio-111","dir":"Changelog","previous_headings":"","what":"fipio 1.1.1","title":"fipio 1.1.1","text":"CRAN release: 2022-03-15 Added Mike Johnson DESCRIPTION. Fixed coords_to_fips() throwing error edge cases (#11). Fixed as_fips() throwing error unknown states. (#10). Fixed as_fips() edge case throwing error (#13).","code":""},{"path":"https://fipio.justinsingh.me/news/index.html","id":"fipio-110","dir":"Changelog","previous_headings":"","what":"fipio 1.1.0","title":"fipio 1.1.0","text":"CRAN release: 2022-01-04 fipio now depends R >= 3.5.0 due using .rds version 3 .rda files.","code":""},{"path":"https://fipio.justinsingh.me/news/index.html","id":"enhancements-1-1-0","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"fipio 1.1.0","text":"Updated internal FIPS table TIGER 2021. Removed sfheaders suggested imports.","code":""},{"path":"https://fipio.justinsingh.me/news/index.html","id":"new-features-1-1-0","dir":"Changelog","previous_headings":"","what":"New features","title":"fipio 1.1.0","text":"Added function coords_to_fips(), provides coordinates FIPS code utility. implemented without sf using simple ray casting algorithm intersections. Based benchmarks, coords_to_fips() performs approximately using sf::st_intersects() geometry table, likely slower case large amount points. Added function as_fips(), provides reverse lookup utility FIPS codes. Note: addition includes function fipio::using_fastmatch() debugging purposes, test coverage .has_fastmatch(), using_fastmatch(), .onLoad() essentially covered unit test containing function calls expect_match_assignment(). Added data-raw/ directory describing process get internal tables.","code":""},{"path":"https://fipio.justinsingh.me/news/index.html","id":"fipio-100","dir":"Changelog","previous_headings":"","what":"fipio 1.0.0","title":"fipio 1.0.0","text":"CRAN release: 2021-10-11 Added NEWS.md file track changes package. fips_abbr() - Gets state abbreviation. fips_state() - Gets state name. fips_county() - Gets county name. fips_geometry() - Gets geometry. fips_metadata() - Gets information data.frame.","code":""}]
